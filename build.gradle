plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}


java {
    group = 'noel.example.board'
    version = '0.0.1'
    sourceCompatibility = JavaVersion.VERSION_21
}

springBoot {
    buildInfo()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework:spring-web'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    compileOnly 'org.projectlombok:lombok'

    implementation 'com.h2database:h2'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testRuntimeOnly 'com.h2database:h2'
}

test {
    failFast = true
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
    baseDirFollowsSourceDir()
    configurations 'asciidoctorExt'
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}